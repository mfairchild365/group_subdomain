<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;
use Drupal\group\Entity\Group;
use Drupal\group\Entity\GroupContent;

/**
 * Implements hook_help().
 */
function group_subdomain_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.group_subdomain':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Assign subdomains to groups') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_link_alter().
 * @param $variables The variables to alter. (text, url, options)
 */
function group_subdomain_link_alter(&$variables) {
  // get the global base url out
  global $base_url;

  if (!$variables['url']->isRouted()) {
    // Custom menu link with no internal path.
    return;
  }
  else {
    // Find the route we are looking at rendering here.
    $internal_path = $variables['url']->getInternalPath();
  }

  // if it is a node route, get the group that this node belongs to
  $matches = array();
  if (preg_match('/^node\/(\d+)$/', $internal_path, $matches)) {
    $node_id = $matches[1];
    $node = Node::load($node_id);
    if ($node) {
      $group_content_array = GroupContent::loadByEntity($node);
      foreach ($group_content_array as $group_content) {
        $group = $group_content->getGroup();
      }
    }
    if (isset($group) && $group->get('field_use_subdomain')->getValue()[0]['value']) {
      // Use Subdomain is activated.
      $subdomain = \Drupal::service('path.alias_manager')->getAliasByPath('/group/' . $group->id());

      // replace the subdomain in the base URL with this new one
      $split_base_url = explode('.', $base_url);
      $split_start = explode('/', $split_base_url[0]);
      $split_start[count($split_start) - 1] = $subdomain;
      $split_base_url[0] = implode('/', $split_start);
      $new_base_url = implode('.', $split_base_url);

      $variables['options']['base_url'] = $new_base_url;
      $url = $variables['url'];
      $url->setAbsolute();
      $variables['url'] = $url;
      $variables['options']['absolute'] = TRUE;

    }
    else {
      // Use Subdomain is off - Need to switch domain to the main one
      // replace the subdomain in the base URL with the main subdomain
      $split_base_url = explode('.', $base_url);
      $split_start = explode('/', $split_base_url[0]);
      $split_start[count($split_start) - 1] = '/ucommrasmussen';
      $split_base_url[0] = implode('/', $split_start);
      $new_base_url = implode('.', $split_base_url);

      $variables['options']['base_url'] = $new_base_url;
      $url = $variables['url'];
      $url->setAbsolute();
      $variables['url'] = $url;
      $variables['options']['absolute'] = TRUE;
    }
  }
  else if (preg_match('/^group\/(\d+)$/', $internal_path, $matches)) {
    $group = Group::load($matches[1]);
    if ($group->get('field_use_subdomain')->getValue()[0]['value']) {
      $subdomain = \Drupal::service('path.alias_manager')->getAliasByPath('/group/' . $group->id());
      // replace the subdomain in the base URL with this new one
      $split_base_url = explode('.', $base_url);
      $split_start = explode('/', $split_base_url[0]);
      $split_start[count($split_start) - 1] = $subdomain;
      $split_base_url[0] = implode('/', $split_start);
      $new_base_url = implode('.', $split_base_url);

      $variables['options']['base_url'] = $new_base_url;
      $url = $variables['url'];
      $url->setAbsolute();
      $variables['url'] = $url;
      $variables['options']['absolute'] = TRUE;
    }
  }
}
